import /init.recovery.${ro.hardware}.rc

on early-init
# Set the security context for the init process.
# This should occur before anything else (e.g. ueventd) is started.
    setcon u:r:init:s0

    start ueventd
    start healthd

on init
    export PATH /sbin:/vendor/bin:/system/sbin:/system/bin:/system/xbin
    export ANDROID_ROOT /system
    export ANDROID_DATA /data
    export EXTERNAL_STORAGE /sdcard
##++ Security R&D Group
    export LD_LIBRARY_PATH /system/vendor/lib:/system/lib
# Make param link
    symlink /dev/block/mmcblk0p8 /dev/block/param
##-- Security R&D Group

    symlink /system/etc /etc

    mkdir /sdcard
    mkdir /sdcard1
    mkdir /.system
    mkdir /system
    mkdir /data
    mkdir /cache
    mkdir /preload
    mkdir /custom
    mkdir /efs
    mkdir /tmp
    mkdir /carrier
    
    mount /tmp /tmp tmpfs

    chown root shell /tmp
    chmod 0775 /tmp

    write /sys/class/android_usb/android0/enable 0
    write /sys/class/android_usb/android0/idVendor 04e8
    write /sys/class/android_usb/android0/idProduct 6860
    write /sys/class/android_usb/android0/functions adb
    write /sys/class/android_usb/android0/iManufacturer ${ro.product.manufacturer}
    write /sys/class/android_usb/android0/iProduct ${ro.product.model}
    write /sys/class/android_usb/android0/iSerial ${ro.serialno}
    emmc_quickverify

on boot

    ifup lo
    hostname localhost
    domainname localdomain
##++ Security R&D Group
# mobicore
    chmod 0700 /dev/mobicore
    chmod 0666 /dev/mobicore-user
    chown system system /dev/mobicore
    chown radio system /dev/mobicore-user
##-- Security R&D Group

    class_start default

on property:sys.powerctl=*
   powerctl ${sys.powerctl}

service ueventd /sbin/ueventd
    critical
    seclabel u:r:ueventd:s0

service healthd /sbin/healthd -n
    critical
    seclabel u:r:healthd:s0

service recovery /sbin/recovery
    seclabel u:r:recovery:s0

service adbd /sbin/adbd recovery
    disabled
    socket adbd stream 660 system system
    seclabel u:r:adbd:s0
    
##++ Security R&D Group    
# MobiCore startup
service mobicore /system/bin/mcDriverDaemon -r /system/app/FFFFFFFF000000000000000000000001.drbin -r /system/app/mcRegistry/ffffffffd00000000000000000000016.tlbin
    class load_ode_env
    user system
    group system
    oneshot

service exyrngd /system/bin/exyrngd -b
    class load_ode_env
    user root
    group root
    oneshot

on property:security.recovery=trigger_start_odeenv
   class_start load_ode_env
   setprop security.recovery running_ode

on property:security.recovery=trigger_shutdown_allenv
   class_reset load_ode_env
   setprop security.recovery shutdown_all
##-- Security R&D Group   

# Always start adbd on userdebug and eng builds
on property:ro.debuggable=1
    write /sys/class/android_usb/android0/enable 1
    start adbd

# Restart adbd so it can run as root
on property:service.adb.root=1
    write /sys/class/android_usb/android0/enable 0
    restart adbd
    write /sys/class/android_usb/android0/enable 1
